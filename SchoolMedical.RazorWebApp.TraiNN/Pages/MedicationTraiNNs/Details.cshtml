@page
@model SchoolMedical.RazorWebApp.TraiNN.Pages.MedicationTraiNns.DetailsModel

@{
    ViewData["Title"] = "Medication Details";
}
<link rel="stylesheet" href="~/css/style.css" />

<h1 class="text-primary mb-4">@ViewData["Title"]</h1>

<div class="table-responsive">
    <table class="table swamp-table table-striped table-bordered shadow-sm rounded align-middle">
        <thead class="table-info text-center">
            <tr>
                <th colspan="2" class="fs-5 text-center">Details</th>
            </tr>
        </thead>
        <tbody class="text-center">
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">Medication ID</th>
                <td id="detail-id">@Model.MedicationTraiNn.MedicationTraiNNid</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">Student Name</th>
                <td>@Html.DisplayFor(model => model.MedicationTraiNn.Dongui.Student.StudentFullName)</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">@Html.DisplayNameFor(model => model.MedicationTraiNn.MedicineName)</th>
                <td id="detail-medicine-name">@Model.MedicationTraiNn.MedicineName</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">@Html.DisplayNameFor(model => model.MedicationTraiNn.Quantity)</th>
                <td id="detail-quantity">@Model.MedicationTraiNn.Quantity</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">@Html.DisplayNameFor(model => model.MedicationTraiNn.Unit)</th>
                <td id="detail-unit">@Model.MedicationTraiNn.Unit</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">@Html.DisplayNameFor(model => model.MedicationTraiNn.Type)</th>
                <td id="detail-type">@Model.MedicationTraiNn.Type</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">@Html.DisplayNameFor(model => model.MedicationTraiNn.Status)</th>
                <td id="detail-status">
                    @if (Model.MedicationTraiNn.Status.ToString() == "True")
                    {
                        <span class="badge bg-success">Available</span>
                    }
                    else if (Model.MedicationTraiNn.Status.ToString() == "False")
                    {
                        <span class="badge bg-danger">Unavailable</span>
                    }
                </td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">Parent Name</th>
                <td>@Html.DisplayFor(model => model.MedicationTraiNn.Dongui.Parent.UserName)</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">@Html.DisplayNameFor(model => model.MedicationTraiNn.ParentNote)</th>
                <td id="detail-parent-note">@(string.IsNullOrEmpty(Model.MedicationTraiNn.ParentNote) ? "N/A" : Model.MedicationTraiNn.ParentNote)</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">Nurse Name</th>
                <td>@Html.DisplayFor(model => model.MedicationTraiNn.Dongui.Nurse.UserName)</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">@Html.DisplayNameFor(model => model.MedicationTraiNn.NurseNote)</th>
                <td id="detail-nurse-note">@(string.IsNullOrEmpty(Model.MedicationTraiNn.NurseNote) ? "N/A" : Model.MedicationTraiNn.NurseNote)</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">Submission Date</th>
                <td>@Model.MedicationTraiNn.Dongui.CreateAt</td>
            </tr>
            <tr>
                <th class="w-25 text-dark fw-bold align-middle text-center">@Html.DisplayNameFor(model => model.MedicationTraiNn.ReceiveDate)</th>
                <td id="detail-receive-date">@Model.MedicationTraiNn.ReceiveDate?.ToString("dd/MM/yyyy")</td>
            </tr>
        </tbody>
    </table>
</div>

<div class="mt-4 d-flex gap-2" id="actionButtons">
    <a class="btn btn-warning text-white" asp-page="./Edit" asp-route-id="@Model.MedicationTraiNn.MedicationTraiNNid">
        <i class="bi bi-pencil-square"></i> Edit
    </a>
    <a class="btn btn-info" asp-page="./Index">
        <i class="bi bi-arrow-left"></i> Back to List
    </a>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    "use strict";

    // Lấy ID của bản ghi đang hiển thị từ Model của Razor
    const currentMedicationId = @Model.MedicationTraiNn.MedicationTraiNNid;

    var connection = new signalR.HubConnectionBuilder().withUrl("/schoolMedicalHub").build();

    connection.start().then(function () {
        console.log("Connected to the SignalR Hub");
    }).catch(function (err) {
        return console.error(err.toString());
    });

    connection.on("ReceiveDelete_SchoolMedical", function (deletedId) {
        // Chỉ xử lý nếu item bị xóa chính là item đang xem
        if (deletedId == currentMedicationId) {
            alert("This record has been deleted by another user. Redirecting to Index in 10 seconds.");
            const cardBody = document.querySelector("#detailsCard .card-body");
            const actionButtons = document.getElementById("actionButtons");

            cardBody.innerHTML = `
                <div class="alert alert-danger" role="alert">
                    <h4 class="alert-heading">Record Deleted!</h4>
                    <p>This medication record has been deleted by another user.</p>
                    <hr>
                    <p class="mb-0">You will be redirected to the list page in 5 seconds.</p>
                </div>`;

            if(actionButtons) {
                actionButtons.remove();
            }

            setTimeout(() => {
                window.location.href = "/MedicationTraiNns/Index";
            }, 5000); // Chờ 5 giây rồi chuyển hướng
        }
    });

    connection.on("ReceiveUpdate_SchoolMedical", function (item) {
        // Chỉ cập nhật giao diện nếu item được update chính là item đang xem
        if (item.medicationTraiNNid === currentMedicationId) {
            console.log("Updating details for item: ", item);

            // Cập nhật từng trường một cách an toàn
            document.getElementById('detail-medicine-name').innerText = item.medicineName;
            document.getElementById('detail-quantity').innerText = item.quantity;
            document.getElementById('detail-unit').innerText = item.unit;
            document.getElementById('detail-type').innerText = item.type;
            document.getElementById('detail-parent-note').innerText = item.parentNote || 'N/A';
            document.getElementById('detail-nurse-note').innerText = item.nurseNote || 'N/A';

            // Cập nhật trạng thái với badge
            const statusBadge = item.status
                ? '<span class="badge bg-success">Available</span>'
                : '<span class="badge bg-danger">Unavailable</span>';
            document.getElementById('detail-status').innerHTML = statusBadge;

            // Cập nhật và định dạng ngày nhận
            const receiveDate = new Date(item.receiveDate);
            const formattedDate = `${('0' + receiveDate.getDate()).slice(-2)}/${('0' + (receiveDate.getMonth() + 1)).slice(-2)}/${receiveDate.getFullYear()}`;
            document.getElementById('detail-receive-date').innerText = formattedDate;
        }
        alert("A record has been updated!");
    });
</script>