// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using SchoolMedical.Repository.TraiNN.Models;

namespace SchoolMedical.Repository.TraiNN.DBContext;

public partial class Medication : DbContext
{
    public Medication()
    {
    }

    public Medication(DbContextOptions<Medication> options)
        : base(options)
    {
    }

    public virtual DbSet<BatchHauMpn> BatchHauMpns { get; set; }

    public virtual DbSet<Class> Classes { get; set; }

    public virtual DbSet<HealthCheckConfirmationThienLm> HealthCheckConfirmationThienLms { get; set; }

    public virtual DbSet<HealthCheckRecordThienLm> HealthCheckRecordThienLms { get; set; }

    public virtual DbSet<HealthCheckSessionThienLm> HealthCheckSessionThienLms { get; set; }

    public virtual DbSet<HealthProfilesHoaLq> HealthProfilesHoaLqs { get; set; }

    public virtual DbSet<MedicalIncidentMedicinesDuyTv> MedicalIncidentMedicinesDuyTvs { get; set; }

    public virtual DbSet<MedicalIncidentsDuyTv> MedicalIncidentsDuyTvs { get; set; }

    public virtual DbSet<MedicationOrderTraiNn> MedicationOrderTraiNns { get; set; }

    public virtual DbSet<MedicationTraiNn> MedicationTraiNns { get; set; }

    public virtual DbSet<MedicineHauMpn> MedicineHauMpns { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<StudentsHoaLq> StudentsHoaLqs { get; set; }

    public virtual DbSet<SystemUserAccount> SystemUserAccounts { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<VaccinationConsentFormsTinHt> VaccinationConsentFormsTinHts { get; set; }

    public virtual DbSet<VaccinationRecordsTinHt> VaccinationRecordsTinHts { get; set; }

    public virtual DbSet<VaccineCampaignsTinHt> VaccineCampaignsTinHts { get; set; }

    //    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //        => optionsBuilder.UseSqlServer("Data Source=MUSE\\OCEANMURD;Initial Catalog=SU25_PRN222_SE1709_G1_SchoolMedical;Persist Security Info=True;User ID=sa;Password=12345;Encrypt=False");
    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection")).UseQueryTrackingBehavior(QueryTrackingBehavior.NoTracking);

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BatchHauMpn>(entity =>
        {
            entity.HasKey(e => e.BatchHauMpnid).HasName("PK__BatchHau__66B8B841278B221C");

            entity.ToTable("BatchHauMPN");

            entity.Property(e => e.BatchHauMpnid).HasColumnName("BatchHauMPNId");
            entity.Property(e => e.BatchImportDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Class>(entity =>
        {
            entity.HasKey(e => e.ClassId).HasName("PK__Class__FDF47986B949AB25");

            entity.ToTable("Class");

            entity.Property(e => e.ClassId).HasColumnName("class_id");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("class_name");
        });

        modelBuilder.Entity<HealthCheckConfirmationThienLm>(entity =>
        {
            entity.HasKey(e => e.HealthCheckConfirmationThienLmid).HasName("PK__HealthCh__675B6E3C0DE676DA");

            entity.ToTable("HealthCheckConfirmationThienLM");

            entity.Property(e => e.HealthCheckConfirmationThienLmid).HasColumnName("HealthCheckConfirmationThienLMId");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.HealthCheckSessionThienLmid).HasColumnName("HealthCheckSessionThienLMId");
            entity.Property(e => e.SubmitAt).HasColumnType("datetime");

            entity.HasOne(d => d.HealthCheckSessionThienLm).WithMany(p => p.HealthCheckConfirmationThienLms)
                .HasForeignKey(d => d.HealthCheckSessionThienLmid)
                .HasConstraintName("FK__HealthChe__Healt__6B24EA82");

            entity.HasOne(d => d.Parent).WithMany(p => p.HealthCheckConfirmationThienLms)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK__HealthChe__Paren__693CA210");

            entity.HasOne(d => d.Student).WithMany(p => p.HealthCheckConfirmationThienLms)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__HealthChe__Stude__6A30C649");
        });

        modelBuilder.Entity<HealthCheckRecordThienLm>(entity =>
        {
            entity.HasKey(e => e.HealthCheckRecordThienLmid).HasName("PK__HealthCh__6FEBB3C35787AB4A");

            entity.ToTable("HealthCheckRecordThienLM");

            entity.Property(e => e.HealthCheckRecordThienLmid).HasColumnName("HealthCheckRecordThienLMId");
            entity.Property(e => e.CheckedAt).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.HealthCheckConfirmationThienLmid).HasColumnName("HealthCheckConfirmationThienLMId");
            entity.Property(e => e.HealthCheckSessionThienLmid).HasColumnName("HealthCheckSessionThienLMId");
            entity.Property(e => e.Height).HasColumnType("decimal(18, 0)");
            entity.Property(e => e.Weight).HasColumnType("decimal(18, 0)");

            entity.HasOne(d => d.HealthCheckConfirmationThienLm).WithMany(p => p.HealthCheckRecordThienLms)
                .HasForeignKey(d => d.HealthCheckConfirmationThienLmid)
                .HasConstraintName("FK__HealthChe__Healt__6E01572D");

            entity.HasOne(d => d.HealthCheckSessionThienLm).WithMany(p => p.HealthCheckRecordThienLms)
                .HasForeignKey(d => d.HealthCheckSessionThienLmid)
                .HasConstraintName("FK__HealthChe__Healt__6D0D32F4");

            entity.HasOne(d => d.Nurse).WithMany(p => p.HealthCheckRecordThienLms)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__HealthChe__Nurse__6EF57B66");

            entity.HasOne(d => d.Student).WithMany(p => p.HealthCheckRecordThienLms)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__HealthChe__Stude__6C190EBB");
        });

        modelBuilder.Entity<HealthCheckSessionThienLm>(entity =>
        {
            entity.HasKey(e => e.HealthCheckSessionThienLmid).HasName("PK__HealthCh__D59DB1C0F09BD4DF");

            entity.ToTable("HealthCheckSessionThienLM");

            entity.Property(e => e.HealthCheckSessionThienLmid).HasColumnName("HealthCheckSessionThienLMId");
            entity.Property(e => e.Address).HasMaxLength(255);
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.EndAt).HasColumnType("datetime");
            entity.Property(e => e.Name).HasMaxLength(255);
            entity.Property(e => e.RegistrationEndAt).HasColumnType("datetime");
            entity.Property(e => e.RegistrationStartAt).HasColumnType("datetime");
            entity.Property(e => e.StartAt).HasColumnType("datetime");
        });

        modelBuilder.Entity<HealthProfilesHoaLq>(entity =>
        {
            entity.HasKey(e => e.HealthProfileHoaLqid).HasName("PK__HealthPr__3268839E6AB75E44");

            entity.ToTable("HealthProfilesHoaLQ");

            entity.Property(e => e.HealthProfileHoaLqid).HasColumnName("HealthProfileHoaLQID");
            entity.Property(e => e.Allergy)
                .HasMaxLength(255)
                .HasColumnName("allergy");
            entity.Property(e => e.BloodPressure).HasColumnName("blood_pressure");
            entity.Property(e => e.BloodType)
                .HasMaxLength(255)
                .HasColumnName("blood_type");
            entity.Property(e => e.ChronicDisease)
                .HasMaxLength(255)
                .HasColumnName("chronic_disease");
            entity.Property(e => e.CurrentMedical)
                .HasMaxLength(255)
                .HasColumnName("current_medical");
            entity.Property(e => e.DateOfBirth).HasColumnName("date_of_birth");
            entity.Property(e => e.Hearing).HasColumnName("hearing");
            entity.Property(e => e.Height)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("height");
            entity.Property(e => e.MedicalHistory)
                .HasMaxLength(255)
                .HasColumnName("medical_history");
            entity.Property(e => e.Sex).HasColumnName("sex");
            entity.Property(e => e.Sight).HasColumnName("sight");
            entity.Property(e => e.StudentId).HasColumnName("student_id");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("weight");

            entity.HasOne(d => d.Student).WithMany(p => p.HealthProfilesHoaLqs)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__HealthPro__stude__59063A47");
        });

        modelBuilder.Entity<MedicalIncidentMedicinesDuyTv>(entity =>
        {
            entity.HasKey(e => e.MedicalIncidentMedicinesDuyTvid).HasName("PK__MedicalI__E65C46E93EB40A00");

            entity.ToTable("MedicalIncidentMedicinesDuyTV");

            entity.Property(e => e.MedicalIncidentMedicinesDuyTvid).HasColumnName("MedicalIncidentMedicinesDuyTVId");
            entity.Property(e => e.UsageNote).HasMaxLength(255);

            entity.HasOne(d => d.MedicalIncident).WithMany(p => p.MedicalIncidentMedicinesDuyTvs)
                .HasForeignKey(d => d.MedicalIncidentId)
                .HasConstraintName("FK__MedicalIn__Medic__60A75C0F");

            entity.HasOne(d => d.Medicine).WithMany(p => p.MedicalIncidentMedicinesDuyTvs)
                .HasForeignKey(d => d.MedicineId)
                .HasConstraintName("FK__MedicalIn__Medic__619B8048");
        });

        modelBuilder.Entity<MedicalIncidentsDuyTv>(entity =>
        {
            entity.HasKey(e => e.MedicalIncidentDuyTvid).HasName("PK__MedicalI__87D4015D63597EAF");

            entity.ToTable("MedicalIncidentsDuyTV");

            entity.Property(e => e.MedicalIncidentDuyTvid).HasColumnName("MedicalIncidentDuyTVId");
            entity.Property(e => e.Diagnosis).HasMaxLength(255);
            entity.Property(e => e.FollowUpNote).HasMaxLength(255);
            entity.Property(e => e.IncidentTime).HasColumnType("datetime");
            entity.Property(e => e.IncidentType).HasMaxLength(255);
            entity.Property(e => e.Symptoms).HasMaxLength(255);
            entity.Property(e => e.Treatment).HasMaxLength(255);

            entity.HasOne(d => d.Nurse).WithMany(p => p.MedicalIncidentsDuyTvs)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__MedicalIn__Nurse__5FB337D6");

            entity.HasOne(d => d.Student).WithMany(p => p.MedicalIncidentsDuyTvs)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__MedicalIn__Stude__5EBF139D");
        });

        modelBuilder.Entity<MedicationOrderTraiNn>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Medicati__3213E83F3298A077");

            entity.ToTable("MedicationOrderTraiNN");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CreateAt)
                .HasColumnType("datetime")
                .HasColumnName("createAt");
            entity.Property(e => e.NurseId).HasColumnName("nurse_id");
            entity.Property(e => e.ParentId).HasColumnName("parent_id");
            entity.Property(e => e.Status).HasColumnName("status");
            entity.Property(e => e.StudentId).HasColumnName("student_id");
            entity.Property(e => e.TinhTrang)
                .HasMaxLength(255)
                .HasColumnName("tinh_trang");

            entity.HasOne(d => d.Nurse).WithMany(p => p.MedicationOrderTraiNnNurses)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__Medicatio__nurse__5DCAEF64");

            entity.HasOne(d => d.Parent).WithMany(p => p.MedicationOrderTraiNnParents)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK__Medicatio__paren__5CD6CB2B");

            entity.HasOne(d => d.Student).WithMany(p => p.MedicationOrderTraiNns)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__Medicatio__stude__5BE2A6F2");
        });

        modelBuilder.Entity<MedicationTraiNn>(entity =>
        {
            entity.HasKey(e => e.MedicationTraiNNid).HasName("PK__Medicati__6EC5F628F77ADCB2");

            entity.ToTable("MedicationTraiNN");

            entity.Property(e => e.MedicationTraiNNid).HasColumnName("MedicationTraiNNid");
            entity.Property(e => e.DonguiId).HasColumnName("dongui_id");
            entity.Property(e => e.MedicineName)
                .HasMaxLength(255)
                .HasColumnName("medicine_name");
            entity.Property(e => e.NurseNote)
                .HasMaxLength(255)
                .HasColumnName("Nurse_note");
            entity.Property(e => e.ParentNote)
                .HasMaxLength(255)
                .HasColumnName("Parent_note");
            entity.Property(e => e.Quantity).HasColumnName("quantity");
            entity.Property(e => e.ReceiveDate)
                .HasColumnType("datetime")
                .HasColumnName("Receive_date");
            entity.Property(e => e.Status).HasColumnName("status");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("type");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("unit");

            entity.HasOne(d => d.Dongui).WithMany(p => p.MedicationTraiNns)
                .HasForeignKey(d => d.DonguiId)
                .HasConstraintName("FK__Medicatio__dongu__5AEE82B9");
        });

        modelBuilder.Entity<MedicineHauMpn>(entity =>
        {
            entity.HasKey(e => e.MedicineHauMpnid).HasName("PK__Medicine__570EDE0083E2FACB");

            entity.ToTable("MedicineHauMPN");

            entity.Property(e => e.MedicineHauMpnid).HasColumnName("MedicineHauMPNId");
            entity.Property(e => e.MedicineBatchHauMpnid).HasColumnName("MedicineBatchHauMPNId");
            entity.Property(e => e.MedicineExpirationDate).HasColumnType("datetime");
            entity.Property(e => e.MedicineManufactureDate).HasMaxLength(255);
            entity.Property(e => e.MedicineName).HasMaxLength(255);
            entity.Property(e => e.MedicineType).HasMaxLength(255);
            entity.Property(e => e.MedicineUnit).HasMaxLength(255);
            entity.Property(e => e.MedicineUsageInstructions).HasMaxLength(255);
            entity.Property(e => e.MedicineUsagePurpose).HasMaxLength(255);

            entity.HasOne(d => d.MedicineBatchHauMpn).WithMany(p => p.MedicineHauMpns)
                .HasForeignKey(d => d.MedicineBatchHauMpnid)
                .HasConstraintName("FK__MedicineH__Medic__59FA5E80");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleId).HasName("PK__Role__760965CC35D2EC3F");

            entity.ToTable("Role");

            entity.Property(e => e.RoleId).HasColumnName("role_id");
            entity.Property(e => e.RoleName)
                .HasMaxLength(255)
                .HasColumnName("role_name");
        });

        modelBuilder.Entity<StudentsHoaLq>(entity =>
        {
            entity.HasKey(e => e.StudentsHoaLqid).HasName("PK__Students__1DB3985ED23C6899");

            entity.ToTable("StudentsHoaLQ");

            entity.Property(e => e.StudentsHoaLqid).HasColumnName("StudentsHoaLQId");
            entity.Property(e => e.ClassId).HasColumnName("class_id");
            entity.Property(e => e.SdtNguoigiamho)
                .HasMaxLength(255)
                .HasColumnName("sdt_nguoigiamho");
            entity.Property(e => e.StudentCode)
                .HasMaxLength(255)
                .HasColumnName("student_code");
            entity.Property(e => e.StudentFullName)
                .HasMaxLength(255)
                .HasColumnName("student_fullName");
            entity.Property(e => e.UserId).HasColumnName("user_id");

            entity.HasOne(d => d.Class).WithMany(p => p.StudentsHoaLqs)
                .HasForeignKey(d => d.ClassId)
                .HasConstraintName("FK__StudentsH__class__571DF1D5");

            entity.HasOne(d => d.User).WithMany(p => p.StudentsHoaLqs)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__StudentsH__user___5629CD9C");
        });

        modelBuilder.Entity<SystemUserAccount>(entity =>
        {
            entity.HasKey(e => e.UserAccountId);

            entity.ToTable("System.UserAccount");

            entity.Property(e => e.UserAccountId).HasColumnName("UserAccountID");
            entity.Property(e => e.ApplicationCode).HasMaxLength(50);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.CreatedDate).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(150);
            entity.Property(e => e.EmployeeCode)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FullName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ModifiedBy).HasMaxLength(50);
            entity.Property(e => e.ModifiedDate).HasColumnType("datetime");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Phone)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RequestCode).HasMaxLength(50);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__User__B9BE370F44964DC3");

            entity.ToTable("User");

            entity.Property(e => e.UserId).HasColumnName("user_id");
            entity.Property(e => e.RoleId).HasColumnName("role_id");
            entity.Property(e => e.UserAccount)
                .HasMaxLength(255)
                .HasColumnName("user_account");
            entity.Property(e => e.UserAddress)
                .HasMaxLength(255)
                .HasColumnName("user_address");
            entity.Property(e => e.UserHashPassword)
                .HasMaxLength(255)
                .HasColumnName("user_hashPassword");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("user_name");
            entity.Property(e => e.UserPhone)
                .HasMaxLength(255)
                .HasColumnName("user_phone");

            entity.HasOne(d => d.Role).WithMany(p => p.Users)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK__User__role_id__5812160E");
        });

        modelBuilder.Entity<VaccinationConsentFormsTinHt>(entity =>
        {
            entity.HasKey(e => e.VaccinationConsentFormTinHtid).HasName("PK__Vaccinat__04F55231870919A8");

            entity.ToTable("VaccinationConsentFormsTinHT");

            entity.Property(e => e.VaccinationConsentFormTinHtid).HasColumnName("VaccinationConsentFormTinHTId");
            entity.Property(e => e.Notes).HasMaxLength(255);
            entity.Property(e => e.SubmissionTime).HasColumnType("datetime");

            entity.HasOne(d => d.Parent).WithMany(p => p.VaccinationConsentFormsTinHts)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK__Vaccinati__Paren__628FA481");

            entity.HasOne(d => d.Student).WithMany(p => p.VaccinationConsentFormsTinHts)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__Vaccinati__Stude__6383C8BA");

            entity.HasOne(d => d.VaccineCampaign).WithMany(p => p.VaccinationConsentFormsTinHts)
                .HasForeignKey(d => d.VaccineCampaignId)
                .HasConstraintName("FK__Vaccinati__Vacci__6477ECF3");
        });

        modelBuilder.Entity<VaccinationRecordsTinHt>(entity =>
        {
            entity.HasKey(e => e.VaccinationRecordTinHtid).HasName("PK__Vaccinat__A5DAE211E9892F65");

            entity.ToTable("VaccinationRecordsTinHT");

            entity.Property(e => e.VaccinationRecordTinHtid).HasColumnName("VaccinationRecordTinHTId");
            entity.Property(e => e.AdverseSymptoms).HasMaxLength(255);
            entity.Property(e => e.PostVaccinationCondition).HasMaxLength(255);
            entity.Property(e => e.PreVaccinationCondition).HasMaxLength(255);
            entity.Property(e => e.VaccinationDateTime).HasColumnType("datetime");
            entity.Property(e => e.VaccineCampaignTinHtid).HasColumnName("VaccineCampaignTinHTId");

            entity.HasOne(d => d.ConsentForm).WithMany(p => p.VaccinationRecordsTinHts)
                .HasForeignKey(d => d.ConsentFormId)
                .HasConstraintName("FK__Vaccinati__Conse__6754599E");

            entity.HasOne(d => d.Nurse).WithMany(p => p.VaccinationRecordsTinHts)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__Vaccinati__Nurse__68487DD7");

            entity.HasOne(d => d.Student).WithMany(p => p.VaccinationRecordsTinHts)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__Vaccinati__Stude__656C112C");

            entity.HasOne(d => d.VaccineCampaignTinHt).WithMany(p => p.VaccinationRecordsTinHts)
                .HasForeignKey(d => d.VaccineCampaignTinHtid)
                .HasConstraintName("FK__Vaccinati__Vacci__66603565");
        });

        modelBuilder.Entity<VaccineCampaignsTinHt>(entity =>
        {
            entity.HasKey(e => e.VaccineCampaignTinHtid).HasName("PK__VaccineC__DC694581E5EE0FB5");

            entity.ToTable("VaccineCampaignsTinHT");

            entity.Property(e => e.VaccineCampaignTinHtid).HasColumnName("VaccineCampaignTinHTId");
            entity.Property(e => e.CampaignDescription).HasMaxLength(255);
            entity.Property(e => e.CampaignName).HasMaxLength(255);
            entity.Property(e => e.EndDateTime).HasColumnType("datetime");
            entity.Property(e => e.Location).HasMaxLength(255);
            entity.Property(e => e.RegistrationEndAt).HasColumnType("datetime");
            entity.Property(e => e.RegistrationStartAt).HasColumnType("datetime");
            entity.Property(e => e.StartDateTime).HasColumnType("datetime");
            entity.Property(e => e.VaccineDescription).HasMaxLength(255);
            entity.Property(e => e.VaccineName).HasMaxLength(255);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}